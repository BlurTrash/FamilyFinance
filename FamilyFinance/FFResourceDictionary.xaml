<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:FamilyFinance.Shared.Controls"
                    xmlns:extensions="clr-namespace:FamilyFinance.Shared.Controls.Extensions"
                    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
                    xmlns:converters="clr-namespace:FamilyFinance.Shared.Converters"
                    xmlns:conv="clr-namespace:FamilyFinance.Core.Converters"
                    xmlns:prim="clr-namespace:FamilyFinance.Shared.Controls.Primitives">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/FamilyFinance;component/Themes/Icons.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <!--Конверторы-->
    <conv:CornerRadiusConverter x:Key="CornerRadiusConverter" x:Shared="False"/>

    <!--Цвета-->
    <Color x:Key="SurfaceColor">#FFFFFF</Color>
    <Color x:Key="TextColor">#495057</Color>
    <Color x:Key="TextSecondaryColor">#6c757d</Color>
    <Color x:Key="PrimaryColor">#3B82F6</Color>
    <Color x:Key="FocusRingColor">#BFDBFE</Color>

    <!--Кисти-->
    <SolidColorBrush x:Key="SurfaceBrush" Color="{StaticResource SurfaceColor}"/>
    <SolidColorBrush x:Key="TextBrush" Color="{StaticResource TextColor}"/>
    <SolidColorBrush x:Key="TextSecondaryBrush" Color="{StaticResource TextSecondaryColor}"/>
    <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}"/>
    <SolidColorBrush x:Key="FocusRingBrush" Color="{StaticResource FocusRingColor}"/>

    <!--Кисти-->
    <SolidColorBrush x:Key="BorderBrush" Color="#DEE2E6"/>
    <SolidColorBrush x:Key="ControlBrush" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="HeaderBrush" Color="#F8F9FA"/>
    <SolidColorBrush x:Key="ButtonBrush" Color="#3B82F6"/>
    <SolidColorBrush x:Key="CaptionBrush" Color="#6C757D"/>
   
    <SolidColorBrush x:Key="WindowBrush" Color="#eff3f8"/>
   
    <SolidColorBrush x:Key="HighLightBrush" Color="#EFF6FF"/>
    <SolidColorBrush x:Key="HighLightBorderBrush" Color="#BFDBFE"/>
    <SolidColorBrush x:Key="HighLightTextBrush" Color="#1D4ED8"/>
    <SolidColorBrush x:Key="TitleBrush" Color="#343A40"/>
    <SolidColorBrush x:Key="HoverBrush" Color="#e9ecef"/>
    <!--Добавлено-->
    <SolidColorBrush x:Key="TextBoxBorderBush" Color="#ced4da"/>
    <SolidColorBrush x:Key="HoverBorderBrush" Color="#3B82F6"/>
    <SolidColorBrush x:Key="ErrorBrush" Color="#e24c4c"/>

    <SolidColorBrush x:Key="HoverButtonBrush" Color="#2563eb"/>
    <SolidColorBrush x:Key="PressedButtonBrush" Color="#1D4ED8"/>

    <SolidColorBrush x:Key="HeaderTextBrush" Color="#343A40"/>
    <SolidColorBrush x:Key="ControlBorderBrush" Color="#CED4DA"/>
    <SolidColorBrush x:Key="SeparatorBrush" Color="#DFE7EF"/>

    <!--Стили-->

    <!--#region DataGrid -->
    <Style TargetType="DataGridCell">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{x:Null}" />
                <Setter Property="BorderBrush" Value="{x:Null}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Background" Value="{StaticResource HeaderBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,1,1"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource HeaderTextBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="11"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SortDirection="{TemplateBinding SortDirection}" SeparatorBrush="Red" SeparatorVisibility="Visible">
                            <Border Background="Transparent">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </themes:DataGridHeaderBorder>
                        <!--<Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>-->
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right"
                               Width="5" BorderThickness="0"
                               BorderBrush="Transparent"
                               Cursor="SizeWE">
                            <Thumb.Template>
                                <ControlTemplate TargetType="Thumb">
                                    <Grid Background="Transparent">
                                        <Grid Width="1" HorizontalAlignment="Right" Background="{StaticResource BorderBrush}">

                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </Thumb.Template>
                        </Thumb>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGrid">
        <Setter Property="Background" Value="{StaticResource ControlBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1, 1, 1, 1"/>

        <Setter Property="HeadersVisibility" Value="Column"/>

        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource BorderBrush}"/>
    </Style>
    <!--#endregion-->

    <!--#region FFToggleButton -->
    <Style x:Key="FFToggleButton" TargetType="ToggleButton">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBrush}"/>
        <Setter Property="Background" Value="{StaticResource ButtonBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" CornerRadius="0 4 4 0">
                        <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"></ContentPresenter>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoverButtonBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PressedButtonBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->
    
    <!--#region FFTextBlock -->
    <Style x:Key="FFTextBlockTitle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource TitleBrush}"/>
    </Style>

    <Style x:Key="FFTextBlock" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
    </Style>

    <Style x:Key="FFTextBlockTitleSmall" TargetType="TextBlock">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
    </Style>


    <Style TargetType="ToolTip">
        <Style.Resources>
            <Style TargetType="ContentPresenter">
                <Style.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="TextWrapping" Value="Wrap" />
                    </Style>
                </Style.Resources>
            </Style>
        </Style.Resources>
        <Setter Property="MaxWidth" Value="500" />
    </Style>
    <!--#endregion-->

    <!--#region FFSeparator -->
    <Style x:Key="FFSeparator" TargetType="Separator">
        <Setter Property="Background" Value="{StaticResource SeparatorBrush}"></Setter>
        <Setter Property="Margin" Value="0 10"></Setter>
        <Setter Property="Height" Value="2"></Setter>
    </Style>
    <!--#endregion-->

    <!--#region FFButton -->
    <!--Устаревший-->
    <Style x:Key="FFButton" TargetType="Button">
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="{StaticResource ButtonBrush}"/>
        <Setter Property="MinHeight" Value="33"/>
        <Setter Property="Padding" Value="10 0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="4"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                   RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoverButtonBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource PressedButtonBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FFButtonCancel" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonBrush}"/>
        <Setter Property="MinHeight" Value="33"/>
        <Setter Property="Padding" Value="10 5"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="4"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                                                   HorizontalAlignment="Center"
                                                                   VerticalAlignment="Center"
                                                                   RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#f7faff"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#e0ebfe"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <ControlTemplate x:Key="FFButtonTemplate" TargetType="{x:Type controls:FFButton}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{TemplateBinding CornerRadius}"
                Cursor="Hand"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
            <!--Второй Border для исправления визуального бага-->
            <Border Margin="-1" 
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{TemplateBinding CornerRadius}">
                <Grid Margin="{TemplateBinding Padding}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition x:Name="Spacing" Width="6"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <controls:FFIcon x:Name="Icon" Width="{TemplateBinding IconSize}" Height="{TemplateBinding IconSize}" Grid.Column="0"
                                      Icon="{TemplateBinding Icon}" 
                                      Color="{TemplateBinding Foreground}"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>

                    <ContentPresenter x:Name="ContentPresenter" Grid.Column="2"
                                      Content="{TemplateBinding Content}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                </Grid>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Content" Value="{x:Null}">
                <Setter TargetName="ContentPresenter" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="Icon" Property="Grid.ColumnSpan" Value="3"/>
                <Setter TargetName="Spacing" Property="Width" Value="0"/>
            </Trigger>
            <Trigger Property="Icon" Value="None">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                <Setter TargetName="ContentPresenter" Property="Grid.ColumnSpan" Value="3"/>
                <Setter TargetName="Spacing" Property="Width" Value="0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type controls:FFButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Icon" Value="Plus"/>
        <Setter Property="Padding" Value="14, 0"/>
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource SurfaceBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template" Value="{StaticResource FFButtonTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#2563EB"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#1D4ED8"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FFButtonText" TargetType="{x:Type controls:FFButton}">
        <Setter Property="Icon" Value="Plus"/>
        <Setter Property="Padding" Value="14, 8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template" Value="{StaticResource FFButtonTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#f7faff"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#e0ebfe"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FFButtonRoundedText" TargetType="{x:Type controls:FFButton}" BasedOn="{StaticResource FFButtonText}">
        <Setter Property="CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight, Converter={StaticResource CornerRadiusConverter}}"/>
    </Style>
    
    <Style x:Key="FFButtonRoundedSecondaryText" TargetType="{x:Type controls:FFButton}">
        <Setter Property="Icon" Value="Plus"/>
        <Setter Property="Padding" Value="14, 8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
        <Setter Property="CornerRadius" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight, Converter={StaticResource CornerRadiusConverter}}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template" Value="{StaticResource FFButtonTemplate}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Opacity="0.04">
                            <SolidColorBrush.Color>
                                <Color R="100" G="116" B="139" A="255"/>
                            </SolidColorBrush.Color>
                        </SolidColorBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Opacity="0.16">
                            <SolidColorBrush.Color>
                                <Color R="100" G="116" B="139" A="255"/>
                            </SolidColorBrush.Color>
                        </SolidColorBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region ToggleButton -->
    <Style TargetType="{x:Type controls:FFToggleButton}" BasedOn="{StaticResource {x:Type controls:FFButton}}">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="#1D4ED8"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FFToggleButtonText" TargetType="{x:Type controls:FFToggleButton}" BasedOn="{StaticResource FFButtonText}">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="#e0ebfe"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Padding" Value="14,8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            
                            <ContentPresenter Grid.Column="0" Content="{TemplateBinding Icon}"/>

                            <ContentPresenter Grid.Column="1" Content="{TemplateBinding Header}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#EFF6FF"/>
                <Setter Property="Foreground" Value="#1D4ED8"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#region FFValidationTemplate -->
    <ControlTemplate x:Key="FFValidationFailed">
        <StackPanel Orientation="Vertical">
            <AdornedElementPlaceholder Name="MyAdorner"/>
            <TextBlock Foreground="{StaticResource ErrorBrush}" FontSize="12" Text="{Binding ElementName=MyAdorner, Path=AdornedElement.(Validation.Errors)/ErrorContent}"/>
        </StackPanel>
    </ControlTemplate>
    <!--#endregion-->

    <!--#region FFTextBox -->
    <Style x:Key="FFTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="MinHeight" Value="33"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ControlTemplate.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="4"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border x:Name="TextBoxBorder"
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost"
                                              BorderThickness="0" IsTabStop="False"
                                              Margin="0" Padding="{TemplateBinding Padding}">
                                </ScrollViewer>
                            </Grid>
                        </Border>
                        <Border Name="borderOwner" BorderThickness="4" Opacity="0.4" Visibility="Hidden" BorderBrush="{StaticResource HoverBorderBrush}" CornerRadius="4" Margin="-3"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                                <Condition Property="IsMouseCaptured" Value="False"/>
                                <Condition Property="Validation.HasError" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="borderOwner" Property="Visibility" Value="Visible"></Setter>
                                <Setter TargetName="TextBoxBorder" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="TextBoxBorder" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Validation.HasError" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="TextBoxBorder" Property="BorderBrush" Value="{StaticResource ErrorBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource ErrorBrush}"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FFTextArea" TargetType="{x:Type TextBox}" BasedOn="{StaticResource FFTextBox}">
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="AcceptsReturn" Value="True"/>
    </Style>
    <!--#endregion-->

    <!--#region FFWaterMarkTextBox -->
    <Style x:Key="FFWatermarkTextBox" TargetType="{x:Type controls:WatermarkTextBox}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="MinHeight" Value="33"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:WatermarkTextBox}">
                    <ControlTemplate.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="4"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border x:Name="TextBoxBorder"
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost" 
                                              BorderThickness="0" 
                                              IsTabStop="False"
                                              Margin="0" Padding="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                </ScrollViewer>
                                <ContentPresenter x:Name="PART_WatermarkHost"
                                                  Content="{TemplateBinding Watermark}"
                                                  ContentTemplate="{TemplateBinding WatermarkTemplate}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  IsHitTestVisible="False"
                                                  Margin="{TemplateBinding Padding}"
                                                  Visibility="Collapsed" />
                            </Grid>
                        </Border>
                        <Border Name="borderOwner" BorderThickness="4" Opacity="0.4" Visibility="Hidden" BorderBrush="{StaticResource HoverBorderBrush}" CornerRadius="4" Margin="-3"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsWatermarkOnGotFocus" Value="False" />
                                <Condition Property="IsFocused" Value="False" />
                                <Condition Property="Text" Value="" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Visibility" TargetName="PART_WatermarkHost" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsWatermarkOnGotFocus" Value="True" />
                                <Condition Property="Text" Value="" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Visibility" TargetName="PART_WatermarkHost" Value="Visible" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="LightGray" />
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                                <Condition Property="IsMouseCaptured" Value="False"/>
                                <Condition Property="Validation.HasError" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="borderOwner" Property="Visibility" Value="Visible"></Setter>
                                <Setter TargetName="TextBoxBorder" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="TextBoxBorder" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Validation.HasError" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="TextBoxBorder" Property="BorderBrush" Value="{StaticResource ErrorBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource ErrorBrush}"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!--#region DatePicker -->
    <converters:DateConverter x:Key="DateConverter"></converters:DateConverter>

    <Style TargetType="{x:Type DatePicker}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <DatePickerTextBox x:Name="TextBox" BorderBrush="{StaticResource BorderBrush}" Grid.Column="0" Validation.ErrorTemplate="{StaticResource FFValidationFailed}">
                            <DatePickerTextBox.Template>
                                <ControlTemplate TargetType="DatePickerTextBox">
                                    <TextBox x:Name="PART_TextBox" Text="{Binding Path=SelectedDate,
                                                RelativeSource={RelativeSource AncestorType={x:Type DatePicker}}, Converter={StaticResource DateConverter}}" 
                                             Style="{StaticResource FFTextBox}" BorderBrush="{TemplateBinding BorderBrush}">
                                        <TextBox.Resources>
                                            <Style TargetType="{x:Type Border}">
                                                <Setter Property="CornerRadius" Value="5,0,0,5"/>
                                            </Style>
                                        </TextBox.Resources>
                                    </TextBox>
                                </ControlTemplate>
                            </DatePickerTextBox.Template>
                        </DatePickerTextBox>

                        <Button x:Name="PART_Button" Grid.Column="1" Width="34" Style="{StaticResource FFButton}">
                            <Button.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="0,5,5,0"/>
                                </Style>
                            </Button.Resources>
                            <Path Stroke="{StaticResource SurfaceBrush}" StrokeThickness="1"
                                Data="M0.5 5.07692V2.69231C0.5 2.14002 0.947715 1.69231 1.5 1.69231H8.5C9.05228 1.69231 9.5 2.14002 9.5 2.69231V5.07692M0.5 5.07692V10C0.5 10.5523 0.947715 11 1.5 11H8.5C9.05228 11 9.5 10.5523 9.5 10V5.07692M0.5 5.07692H9.5M3.36364 0V3.38462M6.63636 0V3.38462">
                            </Path>
                        </Button>

                        <Popup x:Name="PART_Popup"
                               Placement="Bottom"
                               StaysOpen="False"
                               AllowsTransparency="True">

                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="TextBox" Property="BorderBrush" Value="{StaticResource ErrorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region FFButtonEllipse -->
    <Style x:Key="FFButtonEllipse" TargetType="Button">
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="MinWidth" Value="25"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Ellipse Name="ellipseOwner" Margin="-2" Stroke="{StaticResource HighLightBorderBrush}" StrokeThickness="0" Fill="Transparent"/>
                        <Grid>
                            <Ellipse Name="ellipseBorder" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{TemplateBinding Background}" StrokeThickness="0" Stroke="{TemplateBinding BorderBrush}"/>
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource BorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="ellipseBorder" Property="StrokeThickness" Value="1"/>
                            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                            <Setter TargetName="ellipseOwner" Property="StrokeThickness" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region NumericUpDown -->
    <Style x:Key="FFNumericUpDown" TargetType="{x:Type prim:InputBase}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Grid>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Name="PART_TextBox" Padding="5" Margin="0"                                
                                         TextAlignment="Left"                                    
                                         BorderThickness="1"
                                         VerticalContentAlignment="Center"
                                         Grid.RowSpan="2"
                                         Style="{StaticResource FFTextBox}">
                                <!--Text="{Binding RelativeSource={RelativeSource FindAncestor, 
                                         AncestorType={x:Type local:NumericUpDown}}, 
                                         Path=Value}"-->
                                <TextBox.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="4 0 0 4"/>
                                    </Style>
                                </TextBox.Resources>
                            </TextBox>
                            <Border Name="borderOwner" Grid.RowSpan="2" BorderThickness="4" Opacity="0.4" Visibility="Hidden" BorderBrush="{StaticResource HoverBorderBrush}" CornerRadius="4 0 0 4" Margin="-3" Focusable="False" KeyboardNavigation.IsTabStop="False"></Border>
                            <RepeatButton Name="PART_IncreaseButton" Grid.Column="1" Grid.Row="0" Padding="5 0">
                                <RepeatButton.Content>
                                    <Path Margin="10 0" Data="M0,5 L5,0 L10,5" Stroke="White" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center"></Path>
                                </RepeatButton.Content>
                                <RepeatButton.Template>
                                    <ControlTemplate TargetType="RepeatButton">
                                        <Border BorderThickness="0" BorderBrush="{StaticResource HoverBorderBrush}" SnapsToDevicePixels="True" Background="{StaticResource HoverBorderBrush}" CornerRadius="0 4 0 0">
                                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"></ContentPresenter>
                                        </Border>

                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Opacity" Value="0.9"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </RepeatButton.Template>
                            </RepeatButton>
                            <RepeatButton Name="PART_DecreaseButton" Grid.Column="1" Grid.Row="1" Padding="5 0">
                                <RepeatButton.Content>
                                    <Path Margin="10 0" Data="M0,0 L5,5 L10,0" Stroke="white" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center"></Path>
                                </RepeatButton.Content>
                                <RepeatButton.Template>
                                    <ControlTemplate TargetType="RepeatButton">
                                        <Border BorderThickness="0" BorderBrush="{StaticResource HoverBorderBrush}" SnapsToDevicePixels="True" Background="{StaticResource HoverBorderBrush}" CornerRadius="0 0 4 0">
                                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"></ContentPresenter>
                                        </Border>

                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Opacity" Value="0.9"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </RepeatButton.Template>
                            </RepeatButton>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="PART_TextBox" Property="BorderBrush" Value="{StaticResource ErrorBrush}"></Setter>
                            <!--<Setter TargetName="borderOwner" Property="Visibility" Value="Visible"></Setter>
                            <Setter TargetName="borderOwner" Property="BorderBrush" Value="#e24c4c"></Setter>-->
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=PART_TextBox, Path=IsFocused}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.HasError)}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="PART_TextBox" Property="BorderBrush" Value="{StaticResource ErrorBrush}"></Setter>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region FFCheckBox -->
    <Style x:Key="FFCheckBox" TargetType="CheckBox">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="1.5"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="5"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="0">
                            <Border x:Name="CheckBoxBorder" Width="20" Height="20" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <Path x:Name="CheckMark" Visibility="Hidden" Data="M0,3 L3,7 L11,0" VerticalAlignment="Center" HorizontalAlignment="Center" Stroke="White" StrokeThickness="2" StrokeStartLineCap="Round" StrokeEndLineCap="Round"/>
                            </Border>
                            <Border Name="borderOwner"  Width="23" Height="23" BorderThickness="3" Opacity="0.4" Visibility="Hidden" BorderBrush="{StaticResource HoverBorderBrush}" CornerRadius="4" ></Border>
                        </Grid>
                        <ContentPresenter x:Name="contentPresenter" 
                                          Grid.Column="2" Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="Background" Value="{StaticResource HoverBorderBrush}"/>
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="borderOwner" Property="Visibility" Value="Visible"/>
                            <Setter Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="{StaticResource HighLightTextBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region FFTreeView -->
    <Style x:Key="FFTreeViewToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="MinWidth" Value="16"/>
        <Setter Property="MinHeight" Value="16"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Ellipse Name="ellipseOwner" Margin="-2" Stroke="{StaticResource HighLightBorderBrush}" StrokeThickness="2" Visibility="Hidden" Fill="Transparent"/>
                        <Ellipse Name="ellipseBorder" Fill="Transparent"/>
                        <Viewbox Width="12" Height="12">
                            <Path x:Name="ExpandImg" 
                                      Stroke="{StaticResource TextBrush}"
                                      Data="M0,4 L8,12 L16,4"
                                      StrokeThickness="1.5" 
                                      VerticalAlignment="Center" 
                                      HorizontalAlignment="Center"
                                      StrokeStartLineCap="Round"
                                      StrokeEndLineCap="Round">
                                <Path.LayoutTransform>
                                    <RotateTransform Angle="-90"/>
                                </Path.LayoutTransform>
                            </Path>
                        </Viewbox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ExpandImg" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="0"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ellipseBorder" Property="Fill" Value="{StaticResource BorderBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                                <Condition Property="IsMouseCaptured" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ellipseOwner" Property="Visibility" Value="Visible"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FFTreeViewItem" TargetType="TreeViewItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="IsExpanded" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <ControlTemplate.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="4"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true"
                                Grid.ColumnSpan="2">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="18" Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ToggleButton x:Name="Expander" MinHeight="22" MinWidth="22" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource FFTreeViewToggleButton}" ClickMode="Press" Margin="0 0 10 0"/>
                                <ContentPresenter x:Name="PART_Header"
                                                    Grid.Column="1"
                                                    ContentSource="Header"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </Border>

                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Margin="15 0 0 0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding HasItems, RelativeSource={RelativeSource Self}}" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsExpanded, RelativeSource={RelativeSource Self}}" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>

                        <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource HoverBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource HoverBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <!--<Condition Property="Selector.IsSelectionActive" Value="True"/>-->
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{StaticResource HighLightBrush}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource HighLightBorderBrush}"/>
                    <Setter Property="Foreground" Value="{StaticResource HighLightTextBrush}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FFTreeView" TargetType="TreeView">
        <Setter Property="ItemContainerStyle" Value="{StaticResource FFTreeViewItem}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <!--#endregion-->

    <!--#region FFListBox -->
    <!--ListBoxItemBase-->
    <Style x:Key="FFListItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="Padding" Value="10 5"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="ItemBorder" Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}"
                                    Margin="0"
                                    CornerRadius="0">
                        <ContentPresenter ContentSource="Content"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource HoverBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource HoverBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background"  TargetName="ItemBorder" Value="{StaticResource HighLightBrush}"/>
                                <Setter Property="BorderBrush"  TargetName="ItemBorder" Value="{StaticResource HighLightBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="ItemBorder" Value="{StaticResource HighLightBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <!--<Condition Property="Selector.IsSelectionActive" Value="True"/>-->
                    <Condition Property="IsSelected" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Foreground" Value="{StaticResource HighLightTextBrush}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!--ListBox-->
    <Style x:Key="FFList" TargetType="ListBox">
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"></Setter>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Cycle"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource FFListItem}"/>
    </Style>

    <Style x:Key="FFListBox" TargetType="ListBox">
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"></Setter>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Cycle"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource FFListItem}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border Name="TextBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="4">
                        <ScrollViewer>
                            <ItemsPresenter Margin="0 10"></ItemsPresenter>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region FFListView -->
    <Style x:Key="FFListViewItem" TargetType="{x:Type ListViewItem}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Padding" Value="0 6"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="ListViewItemBorder" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True"
                            Margin="0"
                            CornerRadius="0">
                        <Grid>
                            <!--<GridViewRowPresenter Content="{TemplateBinding Content}"
                                                  Columns="{TemplateBinding GridView.ColumnCollection}">-->

                            <GridViewRowPresenter x:Name="gridrowPresenter"
                                                    Content="{TemplateBinding Property=ContentControl.Content}">
                                <GridViewRowPresenter.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis"></Setter>
                                        <Style.Triggers>
                                            <Trigger Property="extensions:TextBlockService.IsTextTrimmed" Value="True">
                                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Text}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </GridViewRowPresenter.Resources>
                            </GridViewRowPresenter>

                            <ContentPresenter x:Name="contentPresenter"
                                              Content="{TemplateBinding Property=ContentControl.Content}"
                                              Visibility="Collapsed"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis"></Setter>
                                        <Style.Triggers>
                                            <Trigger Property="extensions:TextBlockService.IsTextTrimmed" Value="True">
                                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Text}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                            <Setter TargetName="contentPresenter" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ListViewItemBorder" Property="Background" Value="{StaticResource HoverBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="ListViewItemBorder" Value="{StaticResource HighLightBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource HighLightTextBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="ListViewItemBorder" Value="{StaticResource HighLightBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource HighLightTextBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="ListViewItemBorder" Value="{StaticResource TextBoxBorderBush}"/>
                            <Setter Property="Opacity" Value="0.8"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                                <Condition Property="IsMouseCaptured" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ListViewItemBorder" Property="Background" Value="{StaticResource HighLightBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FFListView" TargetType="ListView">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource FFListViewItem}"/>
        <Style.Resources>
            <Style TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="Foreground" Value="#343A40"/>
                <Setter Property="Background" Value="{StaticResource HeaderBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="0 0 0 1"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="Padding" Value="5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Grid>
                                <Border Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Padding="{TemplateBinding Padding}">
                                    <ContentPresenter x:Name="HeaderContent" Content="{TemplateBinding Property=ContentControl.Content}"
                                      Margin="0,0,0,1"
                                      RecognizesAccessKey="True"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                <Thumb x:Name="PART_HeaderGripper"
                                       Background="Transparent"
                                       HorizontalAlignment="Right"
                                       Margin="2 0"
                                       Width="5">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Grid Background="{TemplateBinding Background}">
                                                <Grid Width="1" HorizontalAlignment="Center" Background="{StaticResource BorderBrush}"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
    </Style>
    <!--#endregion-->

    <!--#region FFChips -->
    <Style x:Key="FFChipButton" TargetType="Button">
        <Setter Property="BorderBrush" Value="{StaticResource HighLightTextBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Ellipse Name="ellipseBorder" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{TemplateBinding Background}" StrokeThickness="0.7" Stroke="{TemplateBinding BorderBrush}"/>
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FFChipItemStyle" TargetType="{x:Type controls:ChipsItem}">
        <Setter Property="MaxWidth" Value="100"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Foreground" Value="{StaticResource HighLightTextBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ChipsItem}">
                    <ControlTemplate.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="5"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Border x:Name="itemBorder" Background="{StaticResource HighLightBrush}" Grid.ColumnSpan="2">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        ContentStringFormat="{TemplateBinding ContentTemplateSelector}"                                        
                                         
                                        VerticalAlignment="Center"
                                        Margin="8 4 12 4"
                                        Grid.Column="0">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis"></Setter>
                                        <Style.Triggers>
                                            <Trigger Property="extensions:TextBlockService.IsTextTrimmed" Value="True">
                                                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Text}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>

                            <Button Grid.Column="1"
                                x:Name="PART_Button"
                                Margin="-6 4 6 4"
                                FontSize="8"
                                VerticalContentAlignment="Center"
                                HorizontalContentAlignment="Center"
                                Width="16" Height="16"
                                Style="{StaticResource FFChipButton}">
                                <Button.Content>
                                    <Path Margin="4"
                                          Data="M0,0 L10,10 M0,10 L10,0"
                                          Stroke="{TemplateBinding Foreground}" 
                                          StrokeThickness="1" 
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                                </Button.Content>
                            </Button>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="itemBorder" Property="Background" Value="{StaticResource HighLightBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FFChipsPanel" TargetType="{x:Type controls:ChipsPanel}">
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource FFChipItemStyle}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="MinHeight" Value="78"/>
        <Setter Property="MaxHeight" Value="115"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ChipsPanel}">
                    <ControlTemplate.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="5"/>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border Name="borderOwner" BorderThickness="4" Opacity="0.4" Visibility="{TemplateBinding BorderOwnerVisibility}" CornerRadius="5" BorderBrush="{StaticResource HoverBorderBrush}" Margin="-3"/>
                        <Border Name="border" Background="White" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                            <ScrollViewer x:Name="ChipsScroll" CanContentScroll="True" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <ItemsPresenter x:Name="PART_ItemsPresenter" Grid.Row="0" Margin="0 0 4 0" SnapsToDevicePixels="True" ScrollViewer.CanContentScroll="True"/>
                                    <controls:WatermarkTextBox x:Name="PART_TextBox" IsEnabled="{TemplateBinding IsEditable}" Watermark="{TemplateBinding WatermarkText}" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Text, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" Margin="5" MinWidth="100" BorderBrush="Transparent" BorderThickness="0" ScrollViewer.CanContentScroll="True">
                                    </controls:WatermarkTextBox>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#3B82F6"/>
                        </Trigger>

                        <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#3B82F6"/>
                            <Setter TargetName="borderOwner" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger SourceName="PART_TextBox" Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_TextBox" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value >
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal">
                    </WrapPanel>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region FFComboBox -->
    <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FFComboBoxItem" TargetType="ComboBoxItem">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Padding" Value="14 8"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="ComboBoxItemBorder" Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Padding="{TemplateBinding Padding}"
                                    Margin="0"
                                    CornerRadius="0">
                        <ContentPresenter>
                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="TextTrimming" Value="CharacterEllipsis"></Setter>
                                    <Style.Triggers>
                                        <Trigger Property="extensions:TextBlockService.IsTextTrimmed" Value="True">
                                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Text}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ComboBoxItemBorder" Property="Background" Value="{StaticResource HoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="ComboBoxItemBorder" Property="Background" Value="{StaticResource HighLightBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource HighLightTextBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="True"/>
                                <Condition Property="IsMouseCaptured" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ComboBoxItemBorder" Property="Background" Value="{StaticResource HoverBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FFComboBox" TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MaxDropDownHeight" Value="200"/>
        <Setter Property="MinHeight" Value="34"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource FFComboBoxItem}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border x:Name="ComboBoxBorder"
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType=ComboBox}, Path=ActualHeight}"/>
                                </Grid.ColumnDefinitions>

                                <Viewbox Grid.Column="1" Width="12" Height="12" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Path x:Name="ExpandImg" 
                                      Stroke="{StaticResource TextBrush}"
                                      Data="M0,4 L8,12 L16,4"
                                      StrokeThickness="1.5" 
                                      VerticalAlignment="Center" 
                                      HorizontalAlignment="Center"
                                      StrokeStartLineCap="Round"
                                      StrokeEndLineCap="Round">
                                    </Path>
                                </Viewbox>

                                <ToggleButton x:Name="ToggleButton" Grid.ColumnSpan="2"
                                Focusable="false"
                                ClickMode="Press" 
                                Style="{StaticResource ComboBoxToggleButton}"              
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay,
                                RelativeSource={RelativeSource TemplatedParent}}">
                                </ToggleButton>

                                <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="6 0 2 0"
                                Grid.Column="0"                  
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left">
                                    <ContentPresenter.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="TextTrimming" Value="CharacterEllipsis"></Setter>
                                        </Style>
                                    </ContentPresenter.Resources>
                                </ContentPresenter>

                                <TextBox x:Name="PART_EditableTextBox" 
                                BorderThickness="0"         
                                Grid.Column="0"
                                HorizontalAlignment="Stretch" 
                                VerticalAlignment="Center" 
                                Margin="6 0 2 0"       
                                SelectionBrush="{StaticResource ButtonBrush}"    
                                SelectionOpacity="0.4"         
                                Focusable="True" 
                                Foreground="{StaticResource TextBrush}"
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"/>

                                <Popup
                                 x:Name="PART_Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True" 
                                Focusable="False" 
                                PopupAnimation="Slide">
                                    <Grid Name="DropDown" Margin="10"
                                    SnapsToDevicePixels="True"                
                                    Width="{Binding ElementName=ComboBoxBorder, Path=ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border
                                        x:Name="DropDownBorder"
                                        CornerRadius="4"
                                        BorderThickness="0"
                                        Background="White">
                                            <Border.Effect>
                                                <DropShadowEffect Color="Black" ShadowDepth="2" Opacity="0.1" Direction="270" BlurRadius="10"/>
                                            </Border.Effect>
                                        </Border>
                                        <ScrollViewer Margin="0 2 0 0" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Disabled">
                                            <!--<StackPanel Margin="0 4 0 4"  IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>-->
                                            <Grid>
                                                <ItemsPresenter Margin="0 4 0 4" ScrollViewer.CanContentScroll="True"/>
                                                <TextBlock Name="TB_NoResult" Text="Не найден" Margin="10 0 0 0"
                                                           VerticalAlignment="Center" HorizontalAlignment="Left"
                                                           Visibility="Hidden"/>
                                            </Grid>
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                        <Border Name="ComboBoxBorderOwner" BorderThickness="4" Opacity="0.4" Visibility="Hidden" BorderBrush="{StaticResource HoverBorderBrush}" CornerRadius="4" Margin="-3"></Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="ComboBoxBorderOwner" Property="Visibility" Value="Visible"></Setter>
                            <Setter TargetName="ComboBoxBorder" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                        </Trigger>

                        <Trigger Property="IsEditable" Value="true">
                            <Setter TargetName="ToggleButton" Property="Grid.Column" Value="1"/>
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ComboBoxBorder" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                        </Trigger>

                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="34"/>
                            <Setter TargetName="TB_NoResult" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>

                        <Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
                            <Setter TargetName="ComboBoxBorderOwner" Property="Visibility" Value="Visible"></Setter>
                            <Setter TargetName="ComboBoxBorder" Property="BorderBrush" Value="{StaticResource HoverBorderBrush}"/>
                        </Trigger>

                        <Trigger SourceName="PART_Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>

                        <Trigger SourceName="PART_Popup" Property="Popup.IsOpen" Value="true">
                            <Setter TargetName="ComboBoxBorderOwner" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>

                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="ComboBoxBorder" Property="BorderBrush" Value="{StaticResource ErrorBrush}"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <!--<Setter TargetName="borderOwner" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="borderOwner" Property="BorderBrush" Value="{StaticResource ErrorBrush}"/>-->
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FFAutoCompleteComboBox" TargetType="{x:Type controls:WatermarkComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="IsEditable" Value="True"/>
        <Setter Property="IsTextSearchEnabled" Value="False"/>
        <Setter Property="MaxDropDownHeight" Value="200"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource FFComboBoxItem}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:WatermarkComboBox}">

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <ToggleButton x:Name="ToggleButton" Grid.Column="1"
                                Focusable="false"
                                ClickMode="Press" 
                                Style="{StaticResource FFToggleButton}"              
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay,
                                RelativeSource={RelativeSource TemplatedParent}}">
                            <Path Margin="10 0"
                                          Data="M0,0 L5,5 L10,0"
                                          Stroke="white" 
                                          StrokeThickness="2" 
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                        </ToggleButton>

                        <controls:WatermarkTextBox x:Name="PART_EditableTextBox" 
                                                   Grid.Column="0"
                                                   Visibility="Hidden" 
                                                   Watermark="{TemplateBinding WatermarkText}"
                                                   IsReadOnly="{TemplateBinding IsReadOnly}" 
                                                   Style="{StaticResource FFWatermarkTextBox}">
                            <controls:WatermarkTextBox.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="4 0 0 4"/>
                                </Style>
                            </controls:WatermarkTextBox.Resources>
                        </controls:WatermarkTextBox>

                        <Border x:Name="ContentBorder"
                                Grid.Column="0"  
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4 0 0 4"
                                Visibility="Visible">
                            <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" 
                                                Content="{TemplateBinding SelectionBoxItem}"
                                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                VerticalAlignment="Center"
                                                Margin="5 0 0 0"
                                                Visibility="Visible">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis"></Setter>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Border>
                       

                        <Popup x:Name="PART_Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True" 
                                Focusable="False" 
                                PopupAnimation="Slide">
                            <Grid Name="DropDown" Margin="10"
                                    SnapsToDevicePixels="True"                
                                    Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border
                                        x:Name="DropDownBorder"
                                        CornerRadius="4"
                                        BorderThickness="0"
                                        Background="White">
                                    <Border.Effect>
                                        <DropShadowEffect Color="Black" ShadowDepth="2" Opacity="0.1" Direction="270" BlurRadius="10"/>
                                    </Border.Effect>
                                </Border>
                                <ScrollViewer Margin="0 2 0 0" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Disabled">
                                    <!--<StackPanel Margin="0 4 0 4"  IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>-->
                                    <Grid>
                                        <ItemsPresenter Margin="0 4 0 4" ScrollViewer.CanContentScroll="True"/>
                                        <TextBlock Name="TB_NoResult" Text="Не найден" Margin="10 0 0 0"
                                                           VerticalAlignment="Center" HorizontalAlignment="Left"
                                                           Visibility="Hidden"/>
                                    </Grid>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="ContentBorder" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="34"/>
                            <Setter TargetName="TB_NoResult" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>

                        <Trigger SourceName="PART_Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="FFAutoCompleteListViewTemplate" TargetType="{x:Type controls:WatermarkComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="IsEditable" Value="True"/>
        <Setter Property="IsTextSearchEnabled" Value="False"/>
        <Setter Property="MaxDropDownHeight" Value="200"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource FFValidationFailed}"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource FFComboBoxItem}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:WatermarkComboBox}">

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <ToggleButton x:Name="ToggleButton" Grid.Column="1"
                                Focusable="false"
                                ClickMode="Press" 
                                Style="{StaticResource FFToggleButton}"              
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay,
                                RelativeSource={RelativeSource TemplatedParent}}">
                            <Path Margin="10 0"
                                          Data="M0,0 L5,5 L10,0"
                                          Stroke="white" 
                                          StrokeThickness="2" 
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"/>
                        </ToggleButton>

                        <controls:WatermarkTextBox x:Name="PART_EditableTextBox" 
                                                   Grid.Column="0"
                                                   Visibility="Hidden"
                                                   Watermark="{TemplateBinding WatermarkText}"
                                                   IsReadOnly="{TemplateBinding IsReadOnly}" 
                                                   Style="{StaticResource FFWatermarkTextBox}">
                            <controls:WatermarkTextBox.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="4 0 0 4"/>
                                </Style>
                            </controls:WatermarkTextBox.Resources>
                        </controls:WatermarkTextBox>

                        <Border x:Name="ContentBorder"
                                Grid.Column="0"  
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4 0 0 4"
                                Visibility="Visible">
                            <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" 
                                                Content="{TemplateBinding SelectionBoxItem}"
                                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                VerticalAlignment="Center"
                                                Margin="5 0 0 0"
                                                Visibility="Visible">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis"></Setter>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Border>


                        <Popup x:Name="PART_Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True" 
                                Focusable="False" 
                                PopupAnimation="Slide">
                            <Grid Name="DropDown" Margin="10"
                                    SnapsToDevicePixels="True"                
                                    Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border
                                        x:Name="DropDownBorder"
                                        CornerRadius="4"
                                        BorderThickness="0"
                                        Background="White">
                                    <Border.Effect>
                                        <DropShadowEffect Color="Black" ShadowDepth="2" Opacity="0.1" Direction="270" BlurRadius="10"/>
                                    </Border.Effect>
                                </Border>
                                <!--<ScrollViewer Margin="0 2 0 0" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Hidden">
                                   
                                </ScrollViewer>-->
                                <Grid>
                                    <ListView x:Name="ListView" 
                                              ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                              DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
                                              ItemsSource="{TemplateBinding ItemsSource}"
                                              SelectedItem="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem}"
                                              SelectedValue="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedValue}"
                                              SelectedIndex="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedIndex}"
                                              SelectedValuePath="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedValuePath}"
                                              View="{TemplateBinding View}"
                                              Margin="4"
                                              SelectionMode="Single"
                                              Style="{StaticResource FFListView}">
                                    </ListView>
                                    <TextBlock Name="TB_NoResult" Text="Не найден" Margin="10 0 0 0"
                                                           VerticalAlignment="Center" HorizontalAlignment="Left"
                                                           Visibility="Hidden"/>
                                </Grid>
                            </Grid>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="ContentBorder" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="34"/>
                            <Setter TargetName="TB_NoResult" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ListView" Property="Visibility" Value="Hidden"/>
                        </Trigger>

                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>

                        <Trigger SourceName="PART_Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>

                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="PART_EditableTextBox" Property="BorderBrush" Value="{StaticResource ErrorBrush}"/>
                            <Setter TargetName="ContentBorder" Property="BorderBrush" Value="{StaticResource ErrorBrush}"/>
                            <Setter TargetName="ContentBorder" Property="BorderThickness" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region FFTabControl -->
    <Style x:Key="FFTabControlItem" TargetType="TabItem">
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">

                    <Border Name="TabItemBorder"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0 0 0 2"
                            BorderBrush="Transparent">
                        <ContentPresenter x:Name="ContentSite"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              ContentSource="Header"
                              TextBlock.Foreground="{StaticResource TextBrush}"            
                              Margin="{TemplateBinding Padding}"
                              RecognizesAccessKey="True">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="TabItemBorder" Property="BorderBrush" Value="{StaticResource ButtonBrush}"/>
                                <Setter Property="Panel.ZIndex" Value="100"/>
                                <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="{StaticResource HighLightTextBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FFTabControl" TargetType="TabControl">
        <Setter Property="ItemContainerStyle" Value="{StaticResource FFTabControlItem}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{StaticResource WindowBrush}"/>
    </Style>
    <!--#endregion-->

    <!--#region FFIcons -->
    <Viewbox x:Key="Edit" x:Shared="False" Width="16 " Height="16" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:System="clr-namespace:System;assembly=mscorlib">
        <Rectangle Width="16 " Height="16">
            <Rectangle.Resources>
                <SolidColorBrush x:Key="canvas" Opacity="0" />
                <SolidColorBrush x:Key="light-defaultgrey-10" Color="#212121" Opacity="0.1" />
                <SolidColorBrush x:Key="light-defaultgrey" Color="#212121" Opacity="1" />
            </Rectangle.Resources>
            <Rectangle.Fill>
                <DrawingBrush Stretch="None">
                    <DrawingBrush.Drawing>
                        <DrawingGroup>
                            <DrawingGroup x:Name="canvas">
                                <GeometryDrawing Brush="{DynamicResource canvas}" Geometry="F1M16,16H0V0H16Z" />
                            </DrawingGroup>
                            <DrawingGroup x:Name="level_1">
                                <GeometryDrawing Brush="{DynamicResource light-defaultgrey-10}" Geometry="F1M13.26,2.736a1.5,1.5,0,0,1,0,2.119l0,0L6.116,12,4,9.884l7.143-7.148A1.5,1.5,0,0,1,13.26,2.736Z" />
                                <GeometryDrawing Brush="{DynamicResource light-defaultgrey}" Geometry="F1M13.588,5.233A2,2,0,0,0,10.761,2.41v0h0L4.042,9.13,2,13.333,2.667,14l4.065-1.944L13.588,5.24ZM6.224,11.19l-.082.039L4.771,9.858l.039-.082,6.655-6.658a1,1,0,1,1,1.414,1.414h0Z" />
                            </DrawingGroup>
                        </DrawingGroup>
                    </DrawingBrush.Drawing>
                </DrawingBrush>
            </Rectangle.Fill>
        </Rectangle>
    </Viewbox>

    <Geometry x:Key="Times">
        F1M8.207,7.5l5.147,5.146-.708.708L7.5,8.207,2.354,13.354l-.708-.708L6.793,7.5,1.646,2.354l.708-.708L7.5,6.793l5.146-5.147.708.708Z
    </Geometry>

    <Viewbox x:Key="Delete" x:Shared="False"  Width="16 " Height="16" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:System="clr-namespace:System;assembly=mscorlib">
        <Rectangle Width="16 " Height="16">
            <Rectangle.Resources>
                <SolidColorBrush x:Key="canvas" Opacity="0" />
                <SolidColorBrush x:Key="light-red" Color="#212121" Opacity="1" />
            </Rectangle.Resources>
            <Rectangle.Fill>
                <DrawingBrush Stretch="None">
                    <DrawingBrush.Drawing>
                        <DrawingGroup>
                            <DrawingGroup x:Name="canvas1">
                                <GeometryDrawing Brush="{DynamicResource canvas}" Geometry="F1M16,0V16H0V0Z" />
                            </DrawingGroup>
                            <DrawingGroup x:Name="level_11">
                                <GeometryDrawing Brush="{DynamicResource light-red}" Geometry="F1M8.207,7.5l5.147,5.146-.708.708L7.5,8.207,2.354,13.354l-.708-.708L6.793,7.5,1.646,2.354l.708-.708L7.5,6.793l5.146-5.147.708.708Z" />
                            </DrawingGroup>
                        </DrawingGroup>
                    </DrawingBrush.Drawing>
                </DrawingBrush>
            </Rectangle.Fill>
        </Rectangle>
    </Viewbox>
    <!--#endregion-->

    <!--#region TimePicker -->
    <Style x:Key="FFTimePickerStyle" TargetType="{x:Type controls:TimePicker}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TimePicker}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <!--Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value}"-->
                        <TextBox x:Name="PART_TextBox" Grid.Column="0" Style="{StaticResource FFTextBox}">
                            <TextBox.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="5 0 0 5"/>
                                </Style>
                            </TextBox.Resources>
                        </TextBox>

                        <ToggleButton x:Name="PART_ToggleButton" Padding="5 0"
                                      Grid.Column="1"
                                      IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      Style="{StaticResource FFToggleButton}">

                            <Path Margin="10 0"
                                  Data="M9.82886 8.90084C10.4917 8.03987 10.8834 7.05836 10.9867 5.99506C11.0168 5.69372 10.9931 4.98772 10.9436 4.67131C10.8532 4.09877 10.6983 3.60801 10.4379 3.07851C10.1538 2.49951 9.85899 2.0884 9.38554 1.61271C8.90994 1.13917 8.49891 0.844291 7.92001 0.56017C7.382 0.295422 6.89349 0.142598 6.30599 0.0500441C5.87558 -0.0166817 5.12237 -0.0166817 4.69196 0.0500441C4.10446 0.142598 3.61595 0.295422 3.07794 0.56017C2.49905 0.844291 2.08801 1.13917 1.61241 1.61271C1.13896 2.0884 0.844134 2.49951 0.560066 3.07851C0.29967 3.61017 0.146876 4.08801 0.0500347 4.68208C-0.0166782 5.1018 -0.0166782 5.8982 0.0500347 6.31792C0.146876 6.91199 0.29967 7.38983 0.560066 7.92149C0.844134 8.50049 1.13896 8.9116 1.61241 9.38729C2.08801 9.86083 2.49905 10.1557 3.07794 10.4398C3.60949 10.7003 4.08724 10.8531 4.6812 10.95C5.10085 11.0167 5.8971 11.0167 6.31675 10.95C6.65892 10.894 7.10224 10.7799 7.39061 10.6744C7.64885 10.5797 8.19117 10.315 8.40422 10.1794C8.89918 9.86513 9.50606 9.32057 9.82886 8.90084ZM9.30161 2.61574C9.79443 3.27654 10.1 4.00406 10.2227 4.81122C10.255 5.03077 10.2829 5.69157 10.2636 5.84439C10.26 5.87844 10.2489 5.96471 10.2379 6.05103C10.2357 6.06839 10.2335 6.08575 10.2313 6.10268C10.1323 6.91199 9.81164 7.70194 9.30161 8.38426C9.10578 8.64685 8.6474 9.10532 8.38054 9.30335C7.51758 9.94908 6.56853 10.2655 5.49898 10.2655C4.42942 10.2655 3.48037 9.94908 2.61525 9.30335C2.35271 9.10747 1.89217 8.64685 1.69634 8.38426C1.05073 7.51898 0.73438 6.56976 0.73438 5.5C0.73438 4.43024 1.05073 3.48102 1.69634 2.61574C1.89217 2.35315 2.35056 1.89468 2.61741 1.69665C3.28238 1.19944 4.00116 0.898102 4.83185 0.771109C5.16971 0.71945 5.82824 0.71945 6.1661 0.771109C7.00109 0.900254 7.6962 1.19083 8.3827 1.69881C8.64524 1.89252 9.10363 2.35315 9.30161 2.61574ZM9.1682 5.83153C9.26289 5.78848 9.32745 5.7153 9.36188 5.61413C9.39847 5.51297 9.39847 5.50866 9.37264 5.40965C9.34251 5.30633 9.25428 5.20087 9.16389 5.16427C9.10794 5.1406 8.79805 5.13414 7.50253 5.13414L5.91003 5.13414L5.90357 3.91156C5.89711 2.76216 5.89496 2.68683 5.85623 2.60934C5.76799 2.43069 5.54418 2.3575 5.37202 2.44791C5.25796 2.50602 5.20201 2.57705 5.17618 2.69328C5.16542 2.73848 5.15466 3.47246 5.15466 4.32052V5.86597H7.12592C8.86476 5.86597 9.10579 5.86166 9.1682 5.83153Z"
                                  Stroke="white" 
                                  StrokeThickness="1" 
                                  HorizontalAlignment="Center" 
                                  VerticalAlignment="Center"/>
                        </ToggleButton>

                        <Popup x:Name="PART_Popup"
                               HorizontalOffset="1"
                               VerticalOffset="1"
                               StaysOpen="False"
                               Placement="Bottom"
                               AllowsTransparency="True"
                               PopupAnimation="Slide"
                               IsOpen="{Binding IsChecked, ElementName=PART_ToggleButton}">
                            <Grid x:Name="DropDown" Margin="10"
                                  SnapsToDevicePixels="True"                
                                  Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth}"
                                  MaxHeight="200">
                                <Border
                                        x:Name="DropDownBorder"
                                        CornerRadius="5"
                                        BorderThickness="0"
                                        Background="White">
                                    <Border.Effect>
                                        <DropShadowEffect Color="Black" ShadowDepth="2" Opacity="0.2" Direction="270" BlurRadius="10"/>
                                    </Border.Effect>
                                    <controls:TimeSpanUpDown x:Name="PART_TimeSpanUpDown"
                                                          BorderThickness="0" Foreground="{StaticResource TextBrush}"
                                                          Padding="0 20"
                                                          VerticalAlignment="Center"
                                                          HorizontalAlignment="Center"
                                                          SecondsVisibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SecondsVisibility}"
                                                          DaysVisibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DaysVisibility}"/>
                                </Border>
                            </Grid>
                        </Popup>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region ProgressBar -->
    <Style x:Key="FFProgressBar" TargetType="{x:Type ProgressBar}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="15"/>
        <Setter Property="Background" Value="{StaticResource ButtonBrush}"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Padding" Value="5,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid Background="#00000000">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                            <EasingPointKeyFrame KeyTime="0:0:0" Value="0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1.5" Value="1.95,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:3" Value="0.5,0.5"/>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid Height="{TemplateBinding Height}">
                            <Border Background="#000000" CornerRadius="7.5" Opacity="0.05"/>
                            <Border BorderBrush="#000000" BorderThickness="1" CornerRadius="7.5" Opacity="0.1"/>
                            <Grid Margin="{TemplateBinding BorderThickness}">
                                <Border x:Name="PART_Track"/>
                                <Grid x:Name="PART_Indicator" ClipToBounds="True" HorizontalAlignment="Left" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="width1"/>
                                        <ColumnDefinition x:Name="width2" Width="0"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid x:Name="Animation" RenderTransformOrigin="0.5,0.5">
                                        <Grid.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleY="-1" ScaleX="1"/>
                                                <SkewTransform AngleY="0" AngleX="0"/>
                                                <RotateTransform Angle="180"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Grid.RenderTransform>
                                        <Border Background="{TemplateBinding Background}" CornerRadius="7.5">
                                            <Viewbox HorizontalAlignment="Left" StretchDirection="DownOnly" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                                <TextBlock Foreground="#ffffff" SnapsToDevicePixels="True" FontSize="{TemplateBinding FontSize}" VerticalAlignment="Center" Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Value,StringFormat={}{0}%}" RenderTransformOrigin="0.5,0.5">
                                                    <TextBlock.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform ScaleY="1" ScaleX="-1"/>
                                                            <SkewTransform AngleY="0" AngleX="0"/>
                                                            <RotateTransform Angle="0"/>
                                                            <TranslateTransform/>
                                                        </TransformGroup>
                                                    </TextBlock.RenderTransform>
                                                </TextBlock>
                                            </Viewbox>
                                        </Border>
                                        <Border BorderBrush="#000000" BorderThickness="1" CornerRadius="7.5" Opacity="0.1"/>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#c5c5c5"/>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter TargetName="width1" Property="Width" Value="0.25*"/>
                            <Setter TargetName="width2" Property="Width" Value="0.725*"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

</ResourceDictionary>