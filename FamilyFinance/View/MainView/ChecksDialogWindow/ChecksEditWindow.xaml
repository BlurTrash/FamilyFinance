<Window x:Class="FamilyFinance.View.MainView.ChecksDialogWindow.ChecksEditWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:localViewModel="clr-namespace:FamilyFinance.ViewModel.MainVM.ChecksDialogWindowVM"
        xmlns:local="clr-namespace:FamilyFinance.View.MainView.ChecksDialogWindow"
        xmlns:controls="clr-namespace:FamilyFinance.Shared.Controls"
        xmlns:validation="clr-namespace:FamilyFinance.Shared.ValidationRules"
        xmlns:extensions ="clr-namespace:FamilyFinance.Shared.Controls.Extensions"
        xmlns:w="clr-namespace:FamilyFinance.View.MainView.ChecksDialogWindow"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        d:DataContext="{d:DesignInstance Type=localViewModel:ChecksEditWindowVM}"
        mc:Ignorable="d"
        Title="Счет" Height="550" Width="550" FontSize="14" SizeToContent="Height" ResizeMode="NoResize" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/FamilyFinance;component/FFResourceDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Window.Style>
        <Style TargetType="{x:Type w:ChecksEditWindow}">
            <Setter Property="InteractionResult"
                    Value="{Binding UpdateResult}"/>
        </Style>
    </Window.Style>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCheckEditWindowCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding ClosingCheckEditWindowCommand}" PassEventArgsToCommand="True"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    <Grid Margin="15">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="60"/>
            <RowDefinition Height="auto"/>

            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="130"/>
            <RowDefinition Height="auto"/>

            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <TextBlock Text="Имя счета" Grid.Row="0" Margin="0 0 0 10" Style="{StaticResource FFTextBlock}"></TextBlock>
        <controls:WatermarkTextBox Grid.Row="1" Margin="0 0 0 10"
                                   Watermark="Введите значение"
                                   VerticalContentAlignment="Top" TextWrapping="Wrap" AcceptsReturn="True"
                                   Validation.ErrorTemplate="{StaticResource FFValidationFailed}"
                                   Style="{StaticResource FFWatermarkTextBox}"
                                   extensions:ValidationBehavior.HasError="{Binding HasErrorsName}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="TextChanged">
                    <i:InvokeCommandAction Command="{Binding ChangeDataCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <controls:WatermarkTextBox.Text>
                <Binding Path="TempCheck.Name" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validation:EmptyValidationRule ValidatesOnTargetUpdated="True" ErrorMessage="Обязательное поле"/>
                    </Binding.ValidationRules>
                </Binding>
            </controls:WatermarkTextBox.Text>
        </controls:WatermarkTextBox>
        <Separator Grid.Row="2" Style="{StaticResource FFSeparator}"/>

        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition MaxWidth="11"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0">
                <TextBlock Text="Валюта" Margin="0 0 0 10" Style="{StaticResource FFTextBlock}"></TextBlock>
                <ComboBox x:Name="CurrencyRateCB"
                          IsEditable="True"
                          ItemsSource="{Binding CurrencyRates}"
                          DisplayMemberPath="CurrencyStringCode"
                          Validation.ErrorTemplate="{StaticResource FFValidationFailed}" 
                          Style="{StaticResource FFComboBox}"
                          extensions:ValidationBehavior.HasError="{Binding HasErrorsCurrencyRate}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding ChangeDataCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ComboBox.SelectedItem>
                        <Binding Path="SelectedCurrencyRate" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:ComboBoxItemNotNullValidationRule ValidatesOnTargetUpdated="True" ErrorMessage="Обязательное поле"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </ComboBox.SelectedItem>
                </ComboBox>
            </StackPanel>

            <StackPanel Grid.Column="2">
                <TextBlock Text="Курс" Margin="0 0 0 10" Style="{StaticResource FFTextBlock}"></TextBlock>
                <TextBox Text="{Binding ElementName=CurrencyRateCB, Path=SelectedItem.ExchangeRate, StringFormat={}{0:C}, ConverterCulture=ru-RU}" IsReadOnly="True" IsEnabled="False" Background="#E9ECEF" Style="{StaticResource FFTextBox}"/>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="4" Margin="0 20 0 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition MaxWidth="11"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0">
                <TextBlock Text="Базовый счет" Margin="0 0 0 10" Style="{StaticResource FFTextBlock}"></TextBlock>
                <StackPanel Margin="0 5 0 0" Orientation="Horizontal">
                    <RadioButton VerticalContentAlignment="Center" Content="Да" IsChecked="{Binding TempCheck.IsMasterCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <i:InvokeCommandAction Command="{Binding ChangeDataCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </RadioButton>
                    <RadioButton Margin="15 0 0 0" VerticalContentAlignment="Center" Content="Нет" IsChecked="{Binding IsDefaultMasterCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <i:InvokeCommandAction Command="{Binding ChangeDataCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </RadioButton>
                </StackPanel>
            </StackPanel>

            <StackPanel Grid.Column="2">
                <TextBlock Text="Сумма счета" Margin="0 0 0 10" Style="{StaticResource FFTextBlock}"></TextBlock>
                <controls:DecimalUpDown DecimalPlaces="2" Value="{Binding TempCheck.Amount}" Style="{StaticResource FFNumericUpDown}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <i:InvokeCommandAction Command="{Binding ChangeDataCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </controls:DecimalUpDown>
            </StackPanel>
        </Grid>
        <Separator Grid.Row="5" Style="{StaticResource FFSeparator}"/>
        
        <TextBlock Grid.Row="6" Text="Описание" Margin="0 0 0 10" Style="{StaticResource FFTextBlock}"></TextBlock>
        <TextBox Margin="0 0 0 10" Grid.Row="7" Text="{Binding TempCheck.Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource FFTextArea}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="TextChanged">
                    <i:InvokeCommandAction Command="{Binding ChangeDataCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TextBox>
        <Separator Grid.Row="8" Style="{StaticResource FFSeparator}"/>

        <Grid Grid.Row="9" Margin="0 10 0 0" Grid.IsSharedSizeScope="True" VerticalAlignment="Bottom">
            <Grid HorizontalAlignment="Right">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="A"/>
                    <ColumnDefinition SharedSizeGroup="A"/>
                </Grid.ColumnDefinitions>
                <Button x:Name="BtnSave" Grid.Column="0" Margin="0 0 10 0" Content="Сохранить" Command="{Binding SaveCheckCommand}" Style="{StaticResource FFButton}"/>
                <Button x:Name="BtnCancel" Grid.Column="1" Margin="10 0 0 0" Command="{Binding CancelCheckCommand}" Style="{StaticResource FFButtonCancel}" Content="Отмена"/>
            </Grid>
        </Grid>
    </Grid>
</Window>
